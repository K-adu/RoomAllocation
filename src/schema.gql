# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  email: String!
  fullName: String
  phoneNumber: String
  designation: String
  floor: String
}

type OtpMail {
  otpBool: Boolean!
}

type Token {
  token: String!
}

type Booking {
  hostName: String!
  eventName: String!
  date: DateTime!
  floor: String!
  startTime: String!
  endTime: String!
  description: String!
  notifyTime: DateTime!
  guests: [String!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Host {
  _id: String!
  email: String!
  fullName: String
}

type Meeting {
  eventName: String!
  description: String!
  date: DateTime!
  floor: String!
  startTime: String!
  endTime: String!
  guests: [String!]!
  host: Host!
}

type BookingResponse {
  eventName: String!
  description: String!
  date: DateTime!
  floor: String!
  startTime: String!
  endTime: String!
  guests: [String!]!
  _id: String!
  host: Host!
}

type MyBookingsResponse {
  eventName: String!
  description: String!
  date: DateTime!
  floor: String!
  startTime: String!
  endTime: String!
  guests: [String!]!
  _id: String!
}

type OngoingMeetings {
  _id: String!
  meetings: [Meeting!]!
}

type Query {
  tryQuery: User!
  allBookings(filters: BookingFilters!): [BookingResponse!]!
  myBookings: [MyBookingsResponse!]!
  onGoingMeetings: [OngoingMeetings!]!
}

input BookingFilters {
  floor: String
  date: DateTime = "2023-09-27T04:41:11.270Z"
}

type Mutation {
  sendEmail(sendEmail: LoginDto!): OtpMail!
  sendOtp(sendOtp: OtpDto!): Token!
  createManualBooking(create: CreateBookingDto!): Booking!
}

input LoginDto {
  email: String!
}

input OtpDto {
  email: String!
  otp: String!
}

input CreateBookingDto {
  eventName: String!
  description: String!
  date: DateTime!
  floor: String!
  startTime: String!
  endTime: String!
  notifyTime: DateTime!
  guests: [String!]!
}